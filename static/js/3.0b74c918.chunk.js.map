{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DIalogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DIalogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"names":["module","exports","DialogItem","itemState","className","styles","dialog","src","alt","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","placeholder","textArea","validate","required","textArea_but","Dialogs","dialogsData","dialogsPage","map","messagesData","dialogs","dialogs_items","messages","formData","addMessage","newMessageBody","compose","connect","state","dispatch","addNewMessageActionCreator","Component","RedirectComponent","this","isAuth","React","auth"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,0BAA0B,SAAW,0BAA0B,aAAe,gC,oBCA7LD,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,wGCUbC,EATI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpB,OACE,sBAAKC,UAAWC,IAAOC,OAAvB,UACE,qBAAKC,IAAKJ,EAAUI,IAAKC,IAAI,SAC7B,cAAC,IAAD,CAASC,GAAI,YAAcN,EAAUO,GAArC,SAA0CP,EAAUQ,W,kBCA3CC,EAJC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OAAO,qBAAKT,UAAWC,IAAOQ,QAAvB,SAAiCA,K,kDCuBpCC,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAXL,SAACE,GACtB,OACE,uBAAMC,SAAUD,EAAME,aAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUb,KAAK,iBAAiBc,YAAY,oBAAoBrB,UAAWC,IAAOqB,SAChGC,SAAU,CAACC,IAASd,KACxB,wBAAQV,UAAWC,IAAOwB,aAA1B,yBAQSC,EAjCC,SAACX,GAEf,IAGMY,EAAeZ,EAAMa,YAAYD,YAAYE,KAAI,SAAC3B,GAAD,OAAY,cAAC,EAAD,CAAYH,UAAWG,GAAaA,EAAOI,OACxGwB,EAAef,EAAMa,YAAYE,aAAaD,KAAI,SAACpB,GAAD,OAAa,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQH,OACrH,OACE,sBAAKN,UAAWC,IAAO8B,QAAvB,UACE,sBAAK/B,UAAWC,IAAO+B,cAAvB,eAA0CL,EAA1C,OACA,sBAAK3B,UAAWC,IAAOgC,SAAvB,UACIH,EACF,cAAClB,EAAD,CAAqBI,SAVL,SAACkB,GACrBnB,EAAMoB,WAAWD,EAASE,0B,8DCGfC,sBAAQC,aARZ,SAACC,GAAD,MAAY,CAAEX,YAAaW,EAAMX,gBACjC,SAACY,GACV,MAAO,CACLL,WAAY,SAACC,GAAD,OAAoBI,EAASC,YAA2BL,UCLxC,SAACM,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAIC,KAAK7B,MAAM8B,OAER,cAACH,EAAD,eAAeE,KAAK7B,QAFG,cAAC,IAAD,CAAUV,GAAI,eAHH,GACbyC,IAAMJ,WAStC,OAFqCJ,aAAQ,SAACC,GAAD,MAAY,CAACM,OAAQN,EAAMQ,KAAKF,UAAxCP,CAAkDK,KDE1EN,CAA8CX","file":"static/js/3.0b74c918.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1lEGx\",\"dialogs_items\":\"Dialogs_dialogs_items__20yng\",\"messages\":\"Dialogs_messages__VBGUw\",\"textArea\":\"Dialogs_textArea__3KFuA\",\"textArea_but\":\"Dialogs_textArea_but__2UzvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2CgJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1N4Ou\"};","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./DialogItem.module.css\";\r\nconst DialogItem = ({ itemState }) => {\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <img src={itemState.src} alt=\"User\" />\r\n      <NavLink to={\"/dialogs/\" + itemState.id}>{itemState.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import styles from \"./Message.module.css\";\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={styles.message}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DIalogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Field,reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validator\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const addNewMessage = (formData) => {\r\n    props.addMessage(formData.newMessageBody)\r\n  }\r\n  const dialogsData  = props.dialogsPage.dialogsData.map((dialog) => <DialogItem itemState={dialog} key={dialog.id} />)\r\n  const messagesData = props.dialogsPage.messagesData.map((message) => <Message message={message.message} key={message.id} />)\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogs_items}>  { dialogsData } </div>\r\n      <div className={styles.messages}>\r\n        { messagesData }\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} name='newMessageBody' placeholder=\"Enter new Message\" className={styles.textArea}\r\n          validate={[required,maxLength50]}/>\r\n      <button className={styles.textArea_but}> ADD </button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import {addNewMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mstp = (state) => ({ dialogsPage: state.dialogsPage});  //mapStateToProps\r\nlet mdtp = (dispatch) => { //mapDispatchToProps\r\n  return {\r\n    addMessage: (newMessageBody) => dispatch(addNewMessageActionCreator(newMessageBody)),\r\n  };\r\n};\r\n\r\n\r\nexport default compose(connect(mstp, mdtp),WithAuthRedirect)(Dialogs);\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n      return <Component {...this.props }/>\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect((state) => ({isAuth: state.auth.isAuth}))(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent\r\n};\r\n\r\n"],"sourceRoot":""}